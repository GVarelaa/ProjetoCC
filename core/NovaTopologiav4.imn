node n1 {
    type router
    model router
    network-config {
	hostname Router1
	!
	interface eth3
	 ip address 10.0.8.1/24
	 ipv6 address 2001:8::1/64
	 mac address 00:00:00:aa:00:6c
	!
	interface eth1
	 ip address 10.0.6.2/24
	 ipv6 address 2001:6::2/64
	 mac address 00:00:00:aa:00:5d
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001::1/64
	 mac address 00:00:00:aa:00:50
	!
	interface eth2
	 ip address 10.2.2.254/24
	 ipv6 address 2001:2:2::254/64
	 mac address 00:00:00:aa:00:60
	!
    }
    canvas c1
    iconcoords {321.0 143.0}
    labelcoords {321.0 175.0}
    services {OSPFv2 OSPFv3 zebra IPForward}
    interface-peer {eth2 n8}
    interface-peer {eth0 n2}
    interface-peer {eth1 n6}
    interface-peer {eth3 n7}
}

node n2 {
    type router
    model router
    network-config {
	hostname Router2
	!
	interface eth5
	 ip address 10.0.11.1/24
	 ipv6 address 2001:11::1/64
	 mac address 00:00:00:aa:00:76
	!
	interface eth4
	 ip address 10.0.7.2/24
	 ipv6 address 2001:7::2/64
	 mac address 00:00:00:aa:00:75
	!
	interface eth2
	 ip address 10.0.10.1/24
	 ipv6 address 2001:10::1/64
	 mac address 00:00:00:aa:00:6e
	!
	interface eth3
	 ip address 10.0.9.2/24
	 ipv6 address 2001:9::2/64
	 mac address 00:00:00:aa:00:5f
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	 mac address 00:00:00:aa:00:52
	!
	interface eth0
	 ip address 10.0.0.2/24
	 ipv6 address 2001::2/64
	 mac address 00:00:00:aa:00:51
	!
    }
    canvas c1
    iconcoords {436.0 258.0}
    labelcoords {436.0 290.0}
    services {zebra OSPFv2 OSPFv3 IPForward}
    interface-peer {eth0 n1}
    interface-peer {eth1 n7}
    interface-peer {eth3 n4}
    interface-peer {eth2 n5}
    interface-peer {eth4 n6}
    interface-peer {eth5 n3}
}

node n3 {
    type router
    model router
    network-config {
	hostname Router3
	!
	interface eth2
	 ip address 10.0.11.2/24
	 ipv6 address 2001:11::2/64
	 mac address 00:00:00:aa:00:77
	!
	interface eth1
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	 mac address 00:00:00:aa:00:56
	!
	interface eth0
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	 mac address 00:00:00:aa:00:55
	!
    }
    canvas c1
    iconcoords {691.0 281.0}
    labelcoords {691.0 313.0}
    services {zebra OSPFv2 OSPFv3 IPForward}
    interface-peer {eth0 n7}
    interface-peer {eth1 n4}
    interface-peer {eth2 n2}
}

node n4 {
    type router
    model router
    network-config {
	hostname Router4
	!
	interface eth2
	 ip address 10.0.9.1/24
	 ipv6 address 2001:9::1/64
	 mac address 00:00:00:aa:00:5e
	!
	interface eth1
	 ip address 10.0.4.1/24
	 ipv6 address 2001:4::1/64
	 mac address 00:00:00:aa:00:58
	!
	interface eth0
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	 mac address 00:00:00:aa:00:57
	!
	interface eth3
	 ip address 10.4.4.254/24
	 ipv6 address 2001:4:4::254/64
	 mac address 00:00:00:aa:00:62
	!
    }
    canvas c1
    iconcoords {528.0 428.0}
    labelcoords {528.0 460.0}
    services {zebra OSPFv2 OSPFv3 IPForward}
    interface-peer {eth3 n10}
    interface-peer {eth0 n3}
    interface-peer {eth1 n5}
    interface-peer {eth2 n2}
}

node n5 {
    type router
    model router
    network-config {
	hostname Router5
	!
	interface eth2
	 ip address 10.0.10.2/24
	 ipv6 address 2001:10::2/64
	 mac address 00:00:00:aa:00:6f
	!
	interface eth1
	 ip address 10.0.5.1/24
	 ipv6 address 2001:5::1/64
	 mac address 00:00:00:aa:00:5a
	!
	interface eth0
	 ip address 10.0.4.2/24
	 ipv6 address 2001:4::2/64
	 mac address 00:00:00:aa:00:59
	!
	interface eth3
	 ip address 10.1.1.254/24
	 ipv6 address 2001:1:1::254/64
	 mac address 00:00:00:aa:00:61
	!
    }
    canvas c1
    iconcoords {295.0 411.0}
    labelcoords {295.0 443.0}
    services {zebra OSPFv2 OSPFv3 IPForward}
    interface-peer {eth3 n9}
    interface-peer {eth0 n4}
    interface-peer {eth1 n6}
    interface-peer {eth2 n2}
}

node n6 {
    type router
    model router
    network-config {
	hostname Router6
	!
	interface eth2
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	 mac address 00:00:00:aa:00:74
	!
	interface eth1
	 ip address 10.0.6.1/24
	 ipv6 address 2001:6::1/64
	 mac address 00:00:00:aa:00:5c
	!
	interface eth0
	 ip address 10.0.5.2/24
	 ipv6 address 2001:5::2/64
	 mac address 00:00:00:aa:00:5b
	!
    }
    canvas c1
    iconcoords {181.0 265.0}
    labelcoords {181.0 297.0}
    services {zebra OSPFv2 OSPFv3 IPForward}
    interface-peer {eth0 n5}
    interface-peer {eth1 n1}
    interface-peer {eth2 n2}
}

node n7 {
    type router
    model router
    network-config {
	hostname Router7
	!
	interface eth3
	 ip address 10.0.8.2/24
	 ipv6 address 2001:8::2/64
	 mac address 00:00:00:aa:00:6d
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	 mac address 00:00:00:aa:00:54
	!
	interface eth0
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	 mac address 00:00:00:aa:00:53
	!
	interface eth2
	 ip address 10.3.3.254/24
	 ipv6 address 2001:3:3::254/64
	 mac address 00:00:00:aa:00:63
	!
    }
    canvas c1
    iconcoords {604.0 146.0}
    labelcoords {604.0 178.0}
    services {zebra OSPFv2 OSPFv3 IPForward}
    interface-peer {eth2 n11}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    interface-peer {eth3 n1}
}

node n12 {
    type router
    model host
    network-config {
	hostname Servidor1
	!
	interface eth0
	 ip address 10.2.2.1/24
	 ipv6 address 2001:2:2::1/64
	 mac address 00:00:00:aa:00:64
	!
    }
    canvas c1
    iconcoords {45.0 34.0}
    labelcoords {45.0 66.0}
    services {DefaultRoute SSH StaticRoute UserDefined}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', 'setup.sh', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir dns', 'mkdir dns/files', 'mkdir dns/files/config_files', 'mkdir dns/files/db_files', 'mkdir dns/files/log_files', 'bash setup.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:setup.sh
	custom-command setup.sh
	config {
	copy /home/core/ProjetoCC/ ~
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.2.2.254
	ip route add default via 2001:2:2::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n13 {
    type router
    model host
    network-config {
	hostname Servidor2
	!
	interface eth0
	 ip address 10.2.2.2/24
	 ipv6 address 2001:2:2::2/64
	 mac address 00:00:00:aa:00:65
	!
    }
    canvas c1
    iconcoords {28.0 107.0}
    labelcoords {28.0 139.0}
    services {DefaultRoute SSH StaticRoute UserDefined}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('dns/files/db_files/fcp.db', 'preenche_resolvconf.sh', 'dns/files/rootservers.db', 'dns/files/config_files/fcp_primary.txt', 'dns/files/db_files/1_10_in-addr_reverse.db', 'dns/files/db_files/2_10_in-addr_reverse_primary.txt', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir dns', 'mkdir dns/files', 'mkdir dns/files/config_files', 'mkdir dns/files/db_files', 'mkdir dns/files/log_files', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/2_10_in-addr_reverse_primary.txt
	custom-command dns/files/db_files/2_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 2.10.in-addr.reverse domain
	
	# 2.10.in-addr.reverse. DD ______
	2.10.in-addr.reverse. LG dns/files/log_files/2_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/1_10_in-addr_reverse.db
	custom-command dns/files/db_files/1_10_in-addr_reverse.db
	config {
	# DNS database file for domain 2.10.in-addr.reverse
	
	@ DEFAULT 2.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.2.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns2.1.10.in-addr.reverse. TTL
	
	2.@ NS ns1.2.2.10.in-addr.reverse.
	
	# Addresses
	ns1 A 10.2.2.2 TTL
	ns1.2 A 10.3.3.3 TTL
	
	
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/fcp_primary.txt
	custom-command dns/files/config_files/fcp_primary.txt
	config {
	# Configuration file for primary server for fcp domain
	
	fcp DB dns/files/db_files/fcp.db
	fcp SS 10.3.3.2
	fcp SS 10.4.4.3
	# fcp DD ______
	fcp LG dns/files/log_files/fcp.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/fcp.db
	custom-command dns/files/db_files/fcp.db
	config {
	# DNS database file for domain .fcp
	
	@ DEFAULT fcp.
	TTL DEFAULT 86400
	
	@ SOASP ns1.fcp. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.fcp. TTL
	@ NS ns2.fcp. TTL
	@ NS ns3.fcp. TTL
	
	taremi.@ NS ns1.taremi.fcp.
	
	# MAIL SERVERS
	@ MX ms1.fcp. TTL
	
	# Addresses
	ns1 A 10.2.2.2 TTL
	ns2 A 10.3.3.2 TTL
	ns3 A 10.4.4.3 TTL
	ns1.taremi A 10.4.4.1 TTL
	ms1 A 10.2.2.1 TTL
	pdc A 10.4.4.1 TTL
	
	sp CNAME ns1 TTL
	ss1 CNAME ns2 TTL
	ss2 CNAME ns3 TTL
	mail1 CNAME ms1 TTL
	
	
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.2.2.254
	ip route add default via 2001:2:2::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n14 {
    type router
    model PC
    network-config {
	hostname Portatil1
	!
	interface eth0
	 ip address 10.1.1.1/24
	 ipv6 address 2001:1:1::1/64
	 mac address 00:00:00:aa:00:6b
	!
    }
    canvas c1
    iconcoords {46.0 435.0}
    labelcoords {46.0 467.0}
    services {DefaultRoute StaticRoute UserDefined}
    interface-peer {eth0 n9}
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=()
	files=('preenche_resolvconf.sh',)
	startidx=0
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh')
	cmddown=()
	cmdval=()
	meta=Customize this service to do anything upon startup.
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.254
	ip route add default via 2001:1:1::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.4.4.254
	#/sbin/ip route add 3ffe:4::/64 via 2001:4:4::254
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n15 {
    type router
    model PC
    network-config {
	hostname Portatil2
	!
	interface eth0
	 ip address 10.1.1.2/24
	 ipv6 address 2001:1:1::2/64
	 mac address 00:00:00:aa:00:6a
	!
    }
    canvas c1
    iconcoords {178.0 531.0}
    labelcoords {178.0 563.0}
    services {DefaultRoute StaticRoute UserDefined}
    interface-peer {eth0 n9}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.254
	ip route add default via 2001:1:1::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.4.4.254
	#/sbin/ip route add 3ffe:4::/64 via 2001:4:4::254
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/cc_ggm_primary.txt
	custom-command dns/files/config_files/cc_ggm_primary.txt
	config {
	# Configuration file for primary server for cc.ggm domain
	
	cc.ggm SS 10.4.4.2
	cc.ggm SS 10.3.3.3
	# cc.ggm DD ______
	cc.ggm LG dns/files/log_files/cc_ggm.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/cc_ggm.db
	custom-command dns/files/db_files/cc_ggm.db
	config {
	# DNS database file for domain cc.ggm
	
	@ DEFAULT cc.ggm.
	TTL DEFAULT 86400
	
	@ SOASP ns1.cc.ggm. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.cc.ggm. TTL
	@ NS ns2.cc.ggm. TTL
	@ NS ns3.cc.ggm. TTL
	
	# MAIL SERVERS
	
	# Addresses
	ns1 A 10.1.1.2 TTL
	ns2 A 10.4.4.2 TTL
	ns3 A 10.3.3.3 TTL
	
	sp CNAME ns1 TTL
	ss1 CNAME ns2 TTL
	ss2 CNAME ns3 TTL
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=()
	files=('dns/files/db_files/cc_ggm.db', 'dns/files/rootservers.db', 'dns/files/config_files/cc_ggm_primary.txt', 'preenche_resolvconf.sh')
	startidx=0
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh')
	cmddown=()
	cmdval=()
	meta=Customize this service to do anything upon startup.
	starttime=0
	}
    }
}

node n16 {
    type router
    model PC
    network-config {
	hostname Grilo
	!
	interface eth0
	 ip address 10.4.4.1/24
	 ipv6 address 2001:4:4::1/64
	 mac address 00:00:00:aa:00:69
	!
    }
    canvas c1
    iconcoords {887.0 415.0}
    labelcoords {887.0 447.0}
    services {DefaultRoute StaticRoute UserDefined}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('dns/files/db_files/taremi_fcp.db', 'dns/files/config_files/taremi_fcp_primary.txt', 'dns/files/rootservers.db', 'dns/files/config_files/ggm_secondary2.txt', 'preenche_resolvconf.sh', 'dns/files/config_files/3_3_10_in-addr_reverse.db', 'dns/files/config_files/3_3_10_in-addr_reverse_primary.txt', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/3_3_10_in-addr_reverse_primary.txt
	custom-command dns/files/config_files/3_3_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 3.3.10.in-addr.reverse domain
	
	# 3.3.10.in-addr.reverse DD ______
	3.3.10.in-addr.reverse LG dns/files/log_files/3_3_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/3_3_10_in-addr_reverse.db
	custom-command dns/files/config_files/3_3_10_in-addr_reverse.db
	config {
	# DNS database file for domain 3.3.10.in-addr.reverse
	
	@ DEFAULT 3.3.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.3.3.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.3.3.10.in-addr.reverse. TTL
	
	# Addresses
	ns1 A 10.4.4.1 TTL
	10.3.3.1 PTR _ TTL
	10.3.3.2 PTR _ TTL
	10.3.3.3 PTR _ TTL
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/ggm_secondary2.txt
	custom-command dns/files/config_files/ggm_secondary2.txt
	config {
	# Configuration file for secondary server 2 for ggm domain
	
	ggm SP 10.2.2.1
	# ggm DD ______
	ggm LG dns/files/log_files/ggm.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/taremi_fcp_primary.txt
	custom-command dns/files/config_files/taremi_fcp_primary.txt
	config {
	# Configuration file for primary server for taremi.fcp domain
	
	taremi.fcp SS 10.1.1.3
	taremi.fcp SS 10.2.2.3
	# ggm DD ______
	taremi.fcp LG dns/files/log_files/taremi_fcp.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/taremi_fcp.db
	custom-command dns/files/db_files/taremi_fcp.db
	config {
	# DNS database file for domain taremi.fcp
	
	@ DEFAULT .taremi.fcp
	TTL DEFAULT 86400
	
	@ SOASP ns1.taremi.fcp. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.taremi.fcp. TTL
	@ NS ns2.taremi.fcp. TTL
	@ NS ns3.taremi.fcp. TTL
	
	# MAIL SERVERS
	
	# Addresses
	ns1 A 10.4.4.1 TTL
	ns2 A 10.1.1.3 TTL
	ns3 A 10.2.2.3 TTL
	
	sp CNAME ns1 TTL
	ss1 CNAME ns2 TTL
	ss2 CNAME ns3 TTL
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.4.4.254
	ip route add default via 2001:4:4::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.3.3.254
	#/sbin/ip route add 3ffe:4::/64 via 2001:3:3::254
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n17 {
    type router
    model PC
    network-config {
	hostname Cigarra
	!
	interface eth0
	 ip address 10.4.4.2/24
	 ipv6 address 2001:4:4::2/64
	 mac address 00:00:00:aa:00:68
	!
    }
    canvas c1
    iconcoords {865.0 531.0}
    labelcoords {865.0 563.0}
    services {DefaultRoute StaticRoute UserDefined}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('dns/files/config_files/cc_ggm_secondary1.txt', 'dns/files/rootservers.db', 'preenche_resolvconf.sh', 'dns/files/in-addr_reverse.db', 'dns/files/in-addr_reverse_primary.txt', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/in-addr_reverse_primary.txt
	custom-command dns/files/in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for .in-addr.reverse domain
	
	# in-addr.reverse.ggm DD ______
	in-addr.reverse LG dns/files/log_files/in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/in-addr_reverse.db
	custom-command dns/files/in-addr_reverse.db
	config {
	# DNS database file for .in-addr.reverse domain primary server 
	
	@ DEFAULT .in-addr.reverse.
	TTL DEFAULT 86400
	
	# Config data
	
	@ SOASP .in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	
	10.in-addr.reverse. NS ns1.10.in-addr.reverse.
	
	# Addresses
	
	ns1.10.in-addr A 10.1.1.1 TTL
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/cc_ggm_secondary1.txt
	custom-command dns/files/config_files/cc_ggm_secondary1.txt
	config {
	# Configuration file for secondary server 2 for cc.ggm domain
	
	cc.ggm SP 10.1.1.2
	# cc.ggm DD ______
	cc.ggm LG dns/files/log_files/cc_ggm.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.4.4.254
	ip route add default via 2001:4:4::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.3.3.254
	#/sbin/ip route add 3ffe:4::/64 via 2001:3:3::254
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n18 {
    type router
    model host
    network-config {
	hostname Orca
	!
	interface eth0
	 ip address 10.3.3.1/24
	 ipv6 address 2001:3:3::1/64
	 mac address 00:00:00:aa:00:66
	!
    }
    canvas c1
    iconcoords {917.0 32.0}
    labelcoords {917.0 64.0}
    services {DefaultRoute SSH StaticRoute UserDefined}
    interface-peer {eth0 n11}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('dns/files/db_files/root.db', 'dns/files/rootservers.db', 'dns/files/config_files/ggm_secondary1.txt', 'preenche_resolvconf.sh', 'dns/files/db_files/4_10_in-addr_reverse_primary.txt', 'dns/files/db_files/4_10_in-addr_reverse.db', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir dns', 'mkdir dns/files', 'mkdir dns/files/config_files', 'mkdir dns/files/db_files', 'mkdir dns/files/log_files', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/4_10_in-addr_reverse.db
	custom-command dns/files/db_files/4_10_in-addr_reverse.db
	config {
	# DNS database file for domain 4.10.in-addr.reverse
	
	@ DEFAULT 4.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.4.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.4.10.in-addr.reverse. TTL
	
	4.@ NS ns1.4.1.10.in-addr.reverse.
	
	# Addresses
	ns1 A 10.3.3.1 TTL
	ns1.4 A 10.4.4.3 TTL
	
	
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/4_10_in-addr_reverse_primary.txt
	custom-command dns/files/db_files/4_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 4.10.in-addr.reverse domain
	
	# 4.10.in-addr.reverse. DD ______
	4.10.in-addr.reverse. LG dns/files/log_files/4_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/ggm_secondary1.txt
	custom-command dns/files/config_files/ggm_secondary1.txt
	config {
	# Configuration file for secondary server 1 for ggm domain
	
	ggm SP 10.2.2.1
	# ggm DD ______
	ggm LG dns/files/log_files/ggm.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/root.db
	custom-command dns/files/db_files/root.db
	config {
	# DNS database file for root server 
	
	@ DEFAULT .
	TTL DEFAULT 86400
	
	# Config data
	
	@ SOASP . TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	
	ggm. NS ns1.ggm.
	fcp. NS ns1.fcp.
	
	# Addresses
	
	ns1.ggm A 10.2.2.1 TTL
	ns1.fcp A 10.2.2.2 TTL
	
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.3.3.254
	ip route add default via 2001:3:3::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.2.2.254
	#/sbin/ip route add 3ffe:4::/64 via 2001:2:2::254
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n19 {
    type router
    model host
    network-config {
	hostname Golfinho
	!
	interface eth0
	 ip address 10.3.3.2/24
	 ipv6 address 2001:3:3::2/64
	 mac address 00:00:00:aa:00:67
	!
    }
    canvas c1
    iconcoords {897.0 132.0}
    labelcoords {897.0 164.0}
    services {DefaultRoute SSH StaticRoute UserDefined}
    interface-peer {eth0 n11}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', 'dns/files/rootservers.db', 'dns/files/config_files/fcp_secondary1.txt', 'dns/files/reverse.db', 'dns/files/config_files/reverse_primary.txt', 'dns/files/config_files/1_1_10_in-addr_reverse_primary.txt', 'dns/files/config_files/1_1_10_in-addr_reverse.db', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir dns', 'mkdir dns/files', 'mkdir dns/files/config_files', 'mkdir dns/files/db_files', 'mkdir dns/files/log_files', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/1_1_10_in-addr_reverse.db
	custom-command dns/files/config_files/1_1_10_in-addr_reverse.db
	config {
	# DNS database file for domain 1.1.10.in-addr.reverse
	
	@ DEFAULT 1.1.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.1.1.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.1.1.10.in-addr.reverse. TTL
	
	# Addresses
	ns1 A 10.3.3.2 TTL
	10.1.1.1 PTR _ TTL
	10.1.1.3 PTR _ TTL
	10.1.1.2 PTR _ TTL
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/1_1_10_in-addr_reverse_primary.txt
	custom-command dns/files/config_files/1_1_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 1.1.10.in-addr.reverse domain
	
	# 1.1.10.in-addr.reverse DD ______
	1.1.10.in-addr.reverse LG dns/files/log_files/1_1_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/reverse_primary.txt
	custom-command dns/files/config_files/reverse_primary.txt
	config {
	# Configuration file for primary server for .reverse domain
	
	# reverse DD ______
	reverse LG dns/files/log_files/reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/reverse.db
	custom-command dns/files/reverse.db
	config {
	# DNS database file for reverse domain primary server 
	
	@ DEFAULT .reverse.
	TTL DEFAULT 86400
	
	# Config data
	
	@ SOASP .reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	
	in-addr.reverse. NS ns1.in-addr.reverse.
	
	# Addresses
	
	ns1.in-addr A 10.4.4.2 TTL
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/fcp_secondary1.txt
	custom-command dns/files/config_files/fcp_secondary1.txt
	config {
	# Configuration file for secondary server 1 for .fcp domain
	
	fcp SP 10.2.2.2
	# fcp DD ______
	fcp LG dns/files/log_files/fcp.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.3.3.254
	ip route add default via 2001:3:3::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.2.2.1
	#/sbin/ip route add 3ffe:4::/64 via 2001:2:2::1
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n20 {
    type router
    model host
    network-config {
	hostname Servidor3
	!
	interface eth0
	 ip address 10.2.2.3/24
	 ipv6 address 2001:2:2::3/64
	 mac address 00:00:00:aa:00:70
	!
    }
    canvas c1
    iconcoords {109.0 142.0}
    labelcoords {109.0 174.0}
    services {DefaultRoute SSH StaticRoute UserDefined}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', 'dns/files/rootservers.db', 'dns/files/config_files/taremi_fcp_resolver.txt', 'dns/files/config_files/taremi_fcp_secondary2.txt', 'dns/files/db_files/3_10_in-addr_reverse_primary.txt', 'dns/files/db_files/3_10_in-addr_reverse.db', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir dns', 'mkdir dns/files', 'mkdir dns/files/config_files', 'mkdir dns/files/db_files', 'mkdir dns/files/log_files', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/3_10_in-addr_reverse.db
	custom-command dns/files/db_files/3_10_in-addr_reverse.db
	config {
	# DNS database file for domain 3.10.in-addr.reverse
	
	@ DEFAULT 3.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.3.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.3.10.in-addr.reverse. TTL
	
	3.@ NS ns1.3.3.10.in-addr.reverse.
	
	# Addresses
	ns1 A 10.2.2.3 TTL
	ns1.3 A 10.4.4.1 TTL
	
	
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/db_files/3_10_in-addr_reverse_primary.txt
	custom-command dns/files/db_files/3_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 3.10.in-addr.reverse domain
	
	# 3.10.in-addr.reverse. DD ______
	3.10.in-addr.reverse. LG dns/files/log_files/3_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/taremi_fcp_secondary2.txt
	custom-command dns/files/config_files/taremi_fcp_secondary2.txt
	config {
	# Configuration file for secondary server 2 for fcp domain
	
	fcp SP 10.2.2.2
	# fcp DD ______
	fcp LG dns/files/log_files/fcp.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/taremi_fcp_resolver.txt
	custom-command dns/files/config_files/taremi_fcp_resolver.txt
	config {
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.2.2.254
	ip route add default via 2001:2:2::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n21 {
    type router
    model PC
    network-config {
	hostname Portatil3
	!
	interface eth0
	 ip address 10.1.1.3/24
	 ipv6 address 2001:1:1::3/64
	 mac address 00:00:00:aa:00:71
	!
    }
    canvas c1
    iconcoords {36.0 529.0}
    labelcoords {36.0 561.0}
    services {DefaultRoute StaticRoute UserDefined}
    interface-peer {eth0 n9}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.254
	ip route add default via 2001:1:1::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/taremi_fcp_secondary1.txt
	custom-command dns/files/config_files/taremi_fcp_secondary1.txt
	config {
	# Configuration file for secondary server 1 for taremi.fcp domain
	
	taremi.fcp SP 10.4.4.1
	# taremi.fcp DD ______
	taremi.fcp LG dns/files/log_files/taremi_fcp.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=()
	files=('dns/files/rootservers.db', 'preenche_resolvconf.sh', 'dns/files/config_files/taremi_fcp_secondary1.txt')
	startidx=0
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh')
	cmddown=()
	cmdval=()
	meta=Customize this service to do anything upon startup.
	starttime=0
	}
    }
}

node n23 {
    type router
    model host
    network-config {
	hostname Foca
	!
	interface eth0
	 ip address 10.3.3.3/24
	 ipv6 address 2001:3:3::3/64
	 mac address 00:00:00:aa:00:72
	!
    }
    canvas c1
    iconcoords {768.0 142.0}
    labelcoords {768.0 174.0}
    services {DefaultRoute SSH StaticRoute UserDefined}
    interface-peer {eth0 n11}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', 'dns/files/config_files/cc_ggm_secondary2.txt', 'dns/files/rootservers.db', 'dns/files/config_files/2_2_10_in-addr_reverse.db', 'dns/files/config_files/2_1_10_in-addr_reverse_primary.txt', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', 'mkdir dns', 'mkdir dns/files', 'mkdir dns/files/config_files', 'mkdir dns/files/db_files', 'mkdir dns/files/log_files', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/2_1_10_in-addr_reverse_primary.txt
	custom-command dns/files/config_files/2_1_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 2.1.10.in-addr.reverse domain
	
	# 2.1.10.in-addr.reverse DD ______
	2.1.10.in-addr.reverse LG dns/files/log_files/2_1_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/2_2_10_in-addr_reverse.db
	custom-command dns/files/config_files/2_2_10_in-addr_reverse.db
	config {
	# DNS database file for domain 2.2.10.in-addr.reverse
	
	@ DEFAULT 2.2.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.2.2.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.2.2.10.in-addr.reverse. TTL
	
	# Addresses
	ns1 A 10.3.3.3 TTL
	10.3.3.3 PTR _ TTL
	10.3.3.2 PTR _ TTL
	10.3.3.1 PTR _ TTL
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/cc_ggm_secondary2.txt
	custom-command dns/files/config_files/cc_ggm_secondary2.txt
	config {
	# Configuration file for secondary server 2 for cc.ggm domain
	
	cc.ggm SP 10.1.1.2
	# cc.ggm DD ______
	cc.ggm LG dns/files/log_files/cc_ggm.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf 
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.3.3.254
	ip route add default via 2001:3:3::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	#/sbin/ip route add 10.9.8.0/24 via 10.2.2.254
	#/sbin/ip route add 3ffe:4::/64 via 2001:2:2::254
	
	}
    }
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	dirs=()
	files=('staticroute.sh',)
	startidx=0
	cmdup=('bash staticroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n22 {
    type router
    model PC
    network-config {
	hostname Vespa
	!
	interface eth0
	 ip address 10.4.4.3/24
	 ipv6 address 2001:4:4::3/64
	 mac address 00:00:00:aa:00:73
	!
    }
    canvas c1
    iconcoords {929.0 477.0}
    labelcoords {929.0 509.0}
    services {DefaultRoute StaticRoute UserDefined}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('dns/files/rootservers.db', 'preenche_resolvconf.sh', 'dns/files/config_files/fcp_secondary2.txt', 'dns/files/config_files/4_4_10_in-addr_reverse_primary.txt', 'dns/files/config_files/4_4_10_in-addr_reverse.db', )
	cmdup=('mkdir /run/resolvconf', 'touch /run/resolvconf/resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/4_4_10_in-addr_reverse.db
	custom-command dns/files/config_files/4_4_10_in-addr_reverse.db
	config {
	# DNS database file for domain 4.4.10.in-addr.reverse
	
	@ DEFAULT 4.4.10.in-addr.reverse.
	TTL DEFAULT 86400
	
	@ SOASP ns1.4.4.10.in-addr.reverse. TTL
	@ SOADMIN ___ TTL
	@ SOASERIAL 1 TTL
	@ SOAREFRESH 14400 TTL
	@ SOARETRY 3600
	@ SOAEXPIRE 604800 TTL
	
	# Name servers
	@ NS ns1.4.4.10.in-addr.reverse. TTL
	
	# Addresses
	ns1 A 10.4.4.3 TTL
	10.4.4.1 PTR _ TTL
	10.4.4.2 PTR _ TTL
	10.4.4.3 PTR _ TTL
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/4_4_10_in-addr_reverse_primary.txt
	custom-command dns/files/config_files/4_4_10_in-addr_reverse_primary.txt
	config {
	# Configuration file for primary server for 4.4.10.in-addr.reverse domain
	
	# 4.4.10.in-addr.reverse DD ______
	4.4.10.in-addr.reverse LG dns/files/log_files/4_4_10_in-addr_reverse.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/config_files/fcp_secondary2.txt
	custom-command dns/files/config_files/fcp_secondary2.txt
	config {
	# Configuration file for secondary server 2 for fcp domain
	
	fcp SP 10.2.2.2
	# fcp DD ______
	fcp LG dns/files/log_files/fcp.log
	all LG dns/files/log_files/all.log
	root ST dns/files/rootservers.db
	
	
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc.pt" >> /etc/resolv.conf
	echo "nameserver 10.2.2.1" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dns/files/rootservers.db
	custom-command dns/files/rootservers.db
	config {
	# List of root files for topology
	
	10.2.2.1
	10.3.3.1
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.4.4.254
	ip route add default via 2001:4:4::254
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	dirs=()
	files=('defaultroute.sh',)
	startidx=0
	cmdup=('bash defaultroute.sh',)
	cmddown=()
	cmdval=()
	meta=None
	starttime=0
	}
    }
}

node n8 {
    type hub
    network-config {
	hostname Switch2
	!
    }
    canvas c1
    iconcoords {157.0 70.0}
    labelcoords {157.0 94.0}
    interface-peer {e0 n1}
    interface-peer {e1 n12}
    interface-peer {e2 n13}
    interface-peer {e3 n20}
}

node n9 {
    type hub
    network-config {
	hostname Switch1
	!
    }
    canvas c1
    iconcoords {155.0 478.0}
    labelcoords {155.0 502.0}
    interface-peer {e0 n5}
    interface-peer {e1 n15}
    interface-peer {e2 n14}
    interface-peer {e3 n21}
}

node n10 {
    type hub
    network-config {
	hostname Switch4
	!
    }
    canvas c1
    iconcoords {816.0 470.0}
    labelcoords {816.0 494.0}
    interface-peer {e0 n4}
    interface-peer {e1 n17}
    interface-peer {e2 n16}
    interface-peer {e3 n22}
}

node n11 {
    type hub
    network-config {
	hostname Switch3
	!
    }
    canvas c1
    iconcoords {760.0 47.0}
    labelcoords {760.0 71.0}
    interface-peer {e0 n7}
    interface-peer {e1 n18}
    interface-peer {e2 n19}
    interface-peer {e3 n23}
}

link l1 {
    delay 100
    nodes {n8 n1}
    bandwidth 1000000000
}

link l2 {
    nodes {n8 n12}
}

link l3 {
    nodes {n8 n13}
}

link l4 {
    nodes {n8 n20}
}

link l5 {
    delay 100
    nodes {n9 n5}
    bandwidth 1000000000
}

link l6 {
    nodes {n9 n15}
}

link l7 {
    nodes {n9 n14}
}

link l8 {
    nodes {n9 n21}
}

link l9 {
    duplicate 10
    ber 5.0
    delay 5000
    nodes {n10 n4}
    bandwidth 100000000
}

link l10 {
    nodes {n10 n17}
}

link l11 {
    nodes {n10 n16}
}

link l12 {
    nodes {n10 n22}
}

link l13 {
    delay 100
    nodes {n11 n7}
    bandwidth 1000000000
}

link l14 {
    nodes {n11 n18}
}

link l15 {
    nodes {n11 n19}
}

link l16 {
    nodes {n11 n23}
}

link l17 {
    nodes {n1 n2}
}

link l18 {
    nodes {n2 n7}
}

link l19 {
    nodes {n7 n3}
}

link l20 {
    nodes {n3 n4}
}

link l21 {
    nodes {n4 n5}
}

link l22 {
    nodes {n5 n6}
}

link l23 {
    nodes {n6 n1}
}

link l24 {
    nodes {n4 n2}
}

link l25 {
    nodes {n1 n7}
}

link l26 {
    nodes {n2 n5}
}

link l27 {
    nodes {n6 n2}
}

link l28 {
    nodes {n2 n3}
}

annotation a1 {
    iconcoords {149 70 720 481}
    type oval
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #cbecff
    width 0
    border black
    canvas c1
}

annotation a2 {
    iconcoords {370.0 18.0}
    type text
    label {CC-LEI 2022}
    labelcolor black
    fontfamily {Arial}
    fontsize {22}
    effects {bold}
    canvas c1
}

annotation a3 {
    iconcoords {3.0 5.0 189.0 172.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ccecd1
    width 0
    border black
    rad 28
    canvas c1
}

annotation a4 {
    iconcoords {2 402 216 575}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ccecd1
    width 0
    border black
    rad 25
    canvas c1
}

annotation a5 {
    iconcoords {706 384 961 569}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ccecd1
    width 0
    border black
    rad 25
    canvas c1
}

annotation a6 {
    iconcoords {704.0 1.0 943.0 180.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ccecd1
    width 0
    border black
    rad 25
    canvas c1
}

annotation a7 {
    iconcoords {810.0 364.0}
    type text
    label {LAN4}
    labelcolor #00a900
    fontfamily {Arial}
    fontsize {16}
    effects {bold}
    canvas c1
}

annotation a8 {
    type text
    iconcoords {54.0 184.0}
    label {}
    canvas c1
}

annotation a9 {
    type text
    iconcoords {682.0 129.0}
    label {}
    canvas c1
}

annotation a10 {
    iconcoords {52.0 93.0}
    type text
    label {}
    labelcolor #00a900
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a11 {
    type text
    iconcoords {62.0 96.0}
    label {}
    canvas c1
}

annotation a12 {
    iconcoords {45.0 381.0}
    type text
    label {taremi}
    labelcolor #00a100
    fontfamily {Arial}
    fontsize {16}
    effects {bold}
    canvas c1
}

annotation a13 {
    type text
    iconcoords {754.0 165.0}
    label {}
    canvas c1
}

annotation a14 {
    iconcoords {47.0 195.0}
    type text
    label {fcp}
    labelcolor #009b00
    fontfamily {Arial}
    fontsize {16}
    effects {bold}
    canvas c1
}

annotation a15 {
    iconcoords {798.0 195.0}
    type text
    label {ggm}
    labelcolor #009c00
    fontfamily {Arial}
    fontsize {16}
    effects {bold}
    canvas c1
}

annotation a16 {
    iconcoords {336.0 338.0}
    type text
    label {Rede Backbone (Core Network)}
    labelcolor #00a100
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a17 {
    type text
    iconcoords {402.0 504.0}
    label {}
    canvas c1
}

annotation a18 {
    type text
    iconcoords {414.0 273.0}
    label {}
    canvas c1
}

annotation a19 {
    iconcoords {312.0 508.0}
    type text
    label {Link 1.0 Gbps, 100 microsec (green)}
    labelcolor #009900
    fontfamily {Arial}
    fontsize {10}
    effects {bold}
    canvas c1
}

annotation a20 {
    iconcoords {312.0 530.0}
    type text
    label {Link 100 Mbps, 5 milisec, loss=5%, dup=10% (cyan)}
    labelcolor #8900b0
    fontfamily {Arial}
    fontsize {10}
    effects {bold}
    canvas c1
}

annotation a21 {
    type text
    iconcoords {410.0 570.0}
    label {}
    canvas c1
}

annotation a22 {
    type text
    iconcoords {380.0 608.0}
    label {}
    canvas c1
}

annotation a23 {
    iconcoords {312.0 552.0}
    type text
    label {Link unlimited (red)}
    labelcolor #d30000
    fontfamily {Arial}
    fontsize {10}
    effects {bold}
    canvas c1
}

annotation a24 {
    iconcoords {282 489 646 567}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #ffffff
    width 1
    border #000000
    rad 25
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=
    controlnet0=
    controlnet1=
    controlnet2=
    controlnet3=
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    ovs=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

